<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:tx="http://www.springframework.org/schema/tx"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
    <!-- Enables the Spring MVC @Controller programming model-->
    <annotation-driven />

    <context:annotation-config></context:annotation-config>
    <default-servlet-handler/>

    <context:component-scan base-package="com.receipts">
    </context:component-scan>


    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <beans:property name="order" value="1" />
        <beans:property name="mediaTypes">
            <beans:map>
                <beans:entry key="json" value="application/json" />
            </beans:map>
        </beans:property>
        <beans:property name="defaultViews">
            <beans:list>
                <!-- JSON View -->
                <beans:bean
                        class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
                </beans:bean>
            </beans:list>
        </beans:property>
        <beans:property name="ignoreAcceptHeader" value="true" />

    </beans:bean>

    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/" />
        <beans:property name="suffix" value=".jsp" />
    </beans:bean>

    <beans:bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource"
                destroy-method="close">
        <beans:property name="driverClass" value="com.mysql.jdbc.Driver" />
        <beans:property name="jdbcUrl" value="jdbc:mysql://localhost:3306/receipts" />
        <beans:property name="username" value="root" />
        <beans:property name="password" value="password" />
        <beans:property name="idleConnectionTestPeriodInMinutes" value="1" />
        <beans:property name="idleMaxAgeInMinutes" value="4" />
        <beans:property name="maxConnectionsPerPartition" value="2" />
        <beans:property name="minConnectionsPerPartition" value="2" />
        <beans:property name="partitionCount" value="1" />
        <beans:property name="acquireIncrement" value="2" />
        <beans:property name="statementsCacheSize" value="100" />
        <beans:property name="releaseHelperThreads" value="3" />
    </beans:bean>

    <beans:bean id="dataSourceProxy" class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
        <beans:constructor-arg ref="dataSource"></beans:constructor-arg>
    </beans:bean>

    <beans:bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSourceProxy" />
        <beans:property name="configLocation" value="classpath:hibernate.cfg.xml"/>
    </beans:bean>

    <beans:bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <beans:property name="sessionFactory" ref="sessionFactory" />
    </beans:bean>

    <tx:annotation-driven/>

    <beans:bean id="multipartResolver"
                class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    </beans:bean>

    <beans:bean id="messageSource"
                class="org.springframework.context.support.ResourceBundleMessageSource">
    </beans:bean>

</beans:beans>